var map = function(Interscript) {Interscript.define_map("odni-kor-Hang-Latn-2015", function(Interscript, map) {
map.dependencies = ["unicode","var-kor-Hang-Hang-jamo"];
map.aliases.alpha_plus = "a";
map.aliases_re.alpha_plus = "[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ’]";
map.stages.main = function(s) {
s = Interscript.gsub(s, "(?:"+Interscript.aliases.line_start+"\ |\ "+Interscript.aliases.line_end+")", "");
s = Interscript.gsub(s, ""+Interscript.aliases.line_start+"("+Interscript.get_alias_re("unicode", "unicode_hangul")+")("+Interscript.get_alias_re("unicode", "unicode_hangul")+")"+Interscript.aliases.line_end+"", "$1"+" "+"$2");
s = Interscript.gsub(s, ""+Interscript.aliases.line_start+"("+Interscript.get_alias_re("unicode", "unicode_hangul")+""+Interscript.get_alias_re("unicode", "unicode_hangul")+")("+Interscript.get_alias_re("unicode", "unicode_hangul")+""+Interscript.get_alias_re("unicode", "unicode_hangul")+")"+Interscript.aliases.line_end+"", "$1"+" "+"$2");
s = Interscript.gsub(s, ""+Interscript.aliases.line_start+"((?:독고|동방|등정|망절|무본|부여|사공|서문|선우|어금|제갈|황목|황보))("+Interscript.get_alias_re("unicode", "unicode_hangul")+")"+Interscript.aliases.line_end+"", "$1"+" "+"$2");
s = Interscript.gsub(s, ""+Interscript.aliases.line_start+"("+Interscript.get_alias_re("unicode", "unicode_hangul")+")("+Interscript.get_alias_re("unicode", "unicode_hangul")+""+Interscript.get_alias_re("unicode", "unicode_hangul")+")"+Interscript.aliases.line_end+"", "$1"+" "+"$2");
s = Interscript.gsub(s, "(?:"+Interscript.aliases.line_start+"\ |\ "+Interscript.aliases.line_end+")", "");
s = Interscript.transliterate("var-kor-Hang-Hang-jamo", s, "main");
s = Interscript.parallel_replace_tree(s, map.cache.PTREE_4188853160827037553);
s = Interscript.parallel_replace_tree(s, map.cache.PTREE_4188853160827037553);
s = Interscript.gsub(s, "ᆩ", "kk");
s = Interscript.gsub(s, "ᆪ", "ks");
s = Interscript.gsub(s, "ᆬ", "nch");
s = Interscript.gsub(s, "ᆭ", "nh");
s = Interscript.gsub(s, "ᆮ", "t");
s = Interscript.gsub(s, "ᆳ", "l");
s = Interscript.gsub(s, "ᆴ", "lt’");
s = Interscript.gsub(s, "ᆵ", "lp’");
s = Interscript.gsub(s, "ᆶ", "lh");
s = Interscript.gsub(s, "ᆹ", "ps");
s = Interscript.gsub(s, "ᆻ", "ss");
s = Interscript.gsub(s, "ᆽ", "ch");
s = Interscript.gsub(s, "ᆾ", "ch’");
s = Interscript.gsub(s, "ᆿ", "k’");
s = Interscript.gsub(s, "ᇀ", "t’");
s = Interscript.gsub(s, "ᇁ", "p’");
s = Interscript.gsub(s, "ᇂ", "h");
s = Interscript.gsub(s, "ᆨ", "k");
s = Interscript.gsub(s, "ᆫ", "n");
s = Interscript.gsub(s, "ᆯ", "l");
s = Interscript.gsub(s, "ᆷ", "m");
s = Interscript.gsub(s, "ᆸ", "p");
s = Interscript.gsub(s, "ᆺ", "s");
s = Interscript.gsub(s, "ᆼ", "ng");
s = Interscript.gsub(s, "ᆰ", "lk");
s = Interscript.gsub(s, "ᆲ", "lp");
s = Interscript.gsub(s, "ᄀ", "-k");
s = Interscript.gsub(s, "ᄂ", "-n");
s = Interscript.gsub(s, "ᄃ", "-t");
s = Interscript.gsub(s, "ᄅ", "-r");
s = Interscript.gsub(s, "ᄆ", "-m");
s = Interscript.gsub(s, "ᄇ", "-p");
s = Interscript.gsub(s, "ᄉ", "-s");
s = Interscript.gsub(s, "ᄋ", "-");
s = Interscript.gsub(s, "ᄌ", "-ch");
s = Interscript.gsub(s, "ᄎ", "-ch’");
s = Interscript.gsub(s, "ᄏ", "-k’");
s = Interscript.gsub(s, "ᄐ", "-t’");
s = Interscript.gsub(s, "ᄑ", "-p’");
s = Interscript.gsub(s, "ᄒ", "-h");
s = Interscript.gsub(s, "ᄁ", "-kk");
s = Interscript.gsub(s, "ᄭ", "-sk");
s = Interscript.gsub(s, "ᄄ", "-tt");
s = Interscript.gsub(s, "ᄯ", "-st");
s = Interscript.gsub(s, "ᄈ", "-pp");
s = Interscript.gsub(s, "ᄲ", "-sp");
s = Interscript.gsub(s, "ᄊ", "-ss");
s = Interscript.gsub(s, "ᄍ", "-chch");
s = Interscript.gsub(s, "ᄶ", "-sch");
s = Interscript.gsub(s, "ᅡ", "a");
s = Interscript.gsub(s, "ᅣ", "ya");
s = Interscript.gsub(s, "ᅥ", "o’");
s = Interscript.gsub(s, "ᅧ", "yo’");
s = Interscript.gsub(s, "ᅩ", "o");
s = Interscript.gsub(s, "ᅭ", "yo");
s = Interscript.gsub(s, "ᅮ", "u");
s = Interscript.gsub(s, "ᅲ", "yu");
s = Interscript.gsub(s, "ᅳ", "u’");
s = Interscript.gsub(s, "ᅵ", "i");
s = Interscript.gsub(s, "ᅢ", "ae");
s = Interscript.gsub(s, "ᅤ", "yae");
s = Interscript.gsub(s, "ᅦ", "e");
s = Interscript.gsub(s, "ᅨ", "ye");
s = Interscript.gsub(s, "ᅪ", "wa");
s = Interscript.gsub(s, "ᅫ", "wae");
s = Interscript.gsub(s, "ᅬ", "oe");
s = Interscript.gsub(s, "ᅰ", "we");
s = Interscript.gsub(s, "ᅯ", "wo’");
s = Interscript.gsub(s, "ᅱ", "wi");
s = Interscript.gsub(s, "ᅴ", "ui");
s = Interscript.gsub(s, "(?<=(?:"+Interscript.aliases.line_start+"|\ ))\-", "");
s = Interscript.gsub(s, ""+Interscript.aliases.line_start+"("+Interscript.get_alias_re("odni-kor-Hang-Latn-2015", "alpha_plus")+"+)\-("+Interscript.get_alias_re("odni-kor-Hang-Latn-2015", "alpha_plus")+"+)", "$1"+"$2");
s = Interscript.gsub(s, ""+Interscript.aliases.line_start+"i", "yi");
s = Interscript.functions.title_case(s, {});
return s;
};
map.cache.PTREE_4188853160827037553 = {};
});};if (typeof module !== 'undefined') { module.exports = map; }else if (typeof Interscript !== 'undefined') { map(Interscript); }else { throw "We couldn't dispatch Interscript from a map!"; }